// Generated by view binder compiler. Do not edit!
package com.example.pokedexllm.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.pokedexllm.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityDetallesPokeBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final TextView altura;

  @NonNull
  public final LinearLayout cajaTipos;

  @NonNull
  public final ConstraintLayout fondo;

  @NonNull
  public final TextView id;

  @NonNull
  public final TextView nombre;

  @NonNull
  public final Button patras;

  @NonNull
  public final TextView peso;

  @NonNull
  public final Button shinyToggle;

  @NonNull
  public final ImageView sprite;

  private ActivityDetallesPokeBinding(@NonNull ConstraintLayout rootView, @NonNull TextView altura,
      @NonNull LinearLayout cajaTipos, @NonNull ConstraintLayout fondo, @NonNull TextView id,
      @NonNull TextView nombre, @NonNull Button patras, @NonNull TextView peso,
      @NonNull Button shinyToggle, @NonNull ImageView sprite) {
    this.rootView = rootView;
    this.altura = altura;
    this.cajaTipos = cajaTipos;
    this.fondo = fondo;
    this.id = id;
    this.nombre = nombre;
    this.patras = patras;
    this.peso = peso;
    this.shinyToggle = shinyToggle;
    this.sprite = sprite;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityDetallesPokeBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityDetallesPokeBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_detalles_poke, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityDetallesPokeBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.altura;
      TextView altura = ViewBindings.findChildViewById(rootView, id);
      if (altura == null) {
        break missingId;
      }

      id = R.id.cajaTipos;
      LinearLayout cajaTipos = ViewBindings.findChildViewById(rootView, id);
      if (cajaTipos == null) {
        break missingId;
      }

      ConstraintLayout fondo = (ConstraintLayout) rootView;

      id = R.id.id;
      TextView id_ = ViewBindings.findChildViewById(rootView, id);
      if (id_ == null) {
        break missingId;
      }

      id = R.id.nombre;
      TextView nombre = ViewBindings.findChildViewById(rootView, id);
      if (nombre == null) {
        break missingId;
      }

      id = R.id.patras;
      Button patras = ViewBindings.findChildViewById(rootView, id);
      if (patras == null) {
        break missingId;
      }

      id = R.id.peso;
      TextView peso = ViewBindings.findChildViewById(rootView, id);
      if (peso == null) {
        break missingId;
      }

      id = R.id.shinyToggle;
      Button shinyToggle = ViewBindings.findChildViewById(rootView, id);
      if (shinyToggle == null) {
        break missingId;
      }

      id = R.id.sprite;
      ImageView sprite = ViewBindings.findChildViewById(rootView, id);
      if (sprite == null) {
        break missingId;
      }

      return new ActivityDetallesPokeBinding((ConstraintLayout) rootView, altura, cajaTipos, fondo,
          id_, nombre, patras, peso, shinyToggle, sprite);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
